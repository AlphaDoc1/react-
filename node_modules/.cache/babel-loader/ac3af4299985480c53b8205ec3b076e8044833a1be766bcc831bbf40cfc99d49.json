{"ast":null,"code":"import PersonIcon from'@mui/icons-material/Person';import SendIcon from'@mui/icons-material/Send';import SmartToyIcon from'@mui/icons-material/SmartToy';import React,{useEffect,useRef,useState}from'react';import'./ChatbotSection.css';// We'll create this file next\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatbotSection(){const[chatLog,setChatLog]=useState([]);const[chatInput,setChatInput]=useState('');const[isLoading,setIsLoading]=useState(false);const messagesEndRef=useRef(null);const formatBotResponse=text=>{// Add console log to see the input text\nconsole.log('Original text:',text);// Handle code blocks first - make sure the regex matches correctly\nconst formattedText=text.replace(/```([\\w]*)\\n([\\s\\S]*?)```/g,(match,language,code)=>{console.log('Found code block:',{language,code});return`<div class=\"code-block-container\">\n        <pre class=\"code-block\"><code class=\"language-${language}\">${code.trim()}</code></pre>\n        <button class=\"copy-button\" type=\"button\">Copy</button>\n      </div>`;});// Handle bold text with double asterisks\nconst withBold=formattedText.replace(/\\*\\*(.*?)\\*\\*/g,'<strong>$1</strong>');// Handle bullet points (both asterisk and hyphen)\nconst withBulletPoints=withBold.replace(/^[\\*\\-] (.+)$/gm,'<li>$1</li>');// Handle numbered lists\nconst withNumberedLists=withBulletPoints.replace(/^\\d+\\. (.+)$/gm,'<li>$1</li>');// Handle paragraphs and wrap lists in <ul> tags\nconst withParagraphs=withNumberedLists.split('\\n\\n').map(para=>para.trim()).filter(para=>para).map(para=>{if(para.includes('<li>')){return`<ul>${para}</ul>`;}if(!para.startsWith('<pre')){return`<p>${para}</p>`;}return para;}).join('');return withParagraphs;};const handleSend=async()=>{if(!chatInput.trim())return;const userMessage=chatInput;setChatLog(prev=>[...prev,{sender:'User',text:userMessage}]);setChatInput('');setIsLoading(true);try{const response=await fetch('/api/chat/ask',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:userMessage})});const data=await response.json();let botResponse='';if(data&&data.candidates&&data.candidates.length>0&&data.candidates[0].content&&data.candidates[0].content.parts&&data.candidates[0].content.parts.length>0){botResponse=data.candidates[0].content.parts[0].text;}else{botResponse=JSON.stringify(data);}const formattedResponse=formatBotResponse(botResponse);setChatLog(prev=>[...prev,{sender:'Bot',text:formattedResponse,isFormatted:true}]);}catch(error){setChatLog(prev=>[...prev,{sender:'Bot',text:'Error: '+error}]);}finally{setIsLoading(false);}};useEffect(()=>{// Add event listener for copy buttons\nconst handleCopy=event=>{if(event.target.classList.contains('copy-button')){const codeBlock=event.target.closest('.code-block-container').querySelector('code');navigator.clipboard.writeText(codeBlock.textContent).then(()=>{const button=event.target;button.textContent='Copied!';setTimeout(()=>{button.textContent='Copy';},2000);}).catch(err=>console.error('Failed to copy:',err));}};document.addEventListener('click',handleCopy);return()=>document.removeEventListener('click',handleCopy);},[]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(()=>{scrollToBottom();},[chatLog,isLoading]);return/*#__PURE__*/_jsxs(\"section\",{className:\"chatbot-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-header\",children:[/*#__PURE__*/_jsx(SmartToyIcon,{className:\"robot-icon\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"AI Assistant\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[chatLog.map((entry,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`message-bubble ${entry.sender==='User'?'user-message':'bot-message'}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-icon\",children:entry.sender==='User'?/*#__PURE__*/_jsx(PersonIcon,{}):/*#__PURE__*/_jsx(SmartToyIcon,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:entry.isFormatted?/*#__PURE__*/_jsx(\"div\",{className:\"message-text formatted\",dangerouslySetInnerHTML:{__html:entry.text}}):/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:entry.text})})]},index)),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"message-bubble bot-message\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-icon\",children:/*#__PURE__*/_jsx(SmartToyIcon,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]})})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message here...\",value:chatInput,onChange:e=>setChatInput(e.target.value),onKeyPress:e=>e.key==='Enter'&&handleSend(),className:\"chat-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSend,className:\"send-button\",disabled:!chatInput.trim(),children:/*#__PURE__*/_jsx(SendIcon,{})})]})]});}export default ChatbotSection;","map":{"version":3,"names":["PersonIcon","SendIcon","SmartToyIcon","React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","ChatbotSection","chatLog","setChatLog","chatInput","setChatInput","isLoading","setIsLoading","messagesEndRef","formatBotResponse","text","console","log","formattedText","replace","match","language","code","trim","withBold","withBulletPoints","withNumberedLists","withParagraphs","split","map","para","filter","includes","startsWith","join","handleSend","userMessage","prev","sender","response","fetch","method","headers","body","JSON","stringify","message","data","json","botResponse","candidates","length","content","parts","formattedResponse","isFormatted","error","handleCopy","event","target","classList","contains","codeBlock","closest","querySelector","navigator","clipboard","writeText","textContent","then","button","setTimeout","catch","err","document","addEventListener","removeEventListener","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","entry","index","dangerouslySetInnerHTML","__html","ref","type","placeholder","value","onChange","e","onKeyPress","key","onClick","disabled"],"sources":["C:/Users/savan/OneDrive/Desktop/react-notes-app/src/components/ChatbotSection.js"],"sourcesContent":["import PersonIcon from '@mui/icons-material/Person';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport './ChatbotSection.css'; // We'll create this file next\r\n\r\nfunction ChatbotSection() {\r\n  const [chatLog, setChatLog] = useState([]);\r\n  const [chatInput, setChatInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const formatBotResponse = (text) => {\r\n    // Add console log to see the input text\r\n    console.log('Original text:', text);\r\n    \r\n    // Handle code blocks first - make sure the regex matches correctly\r\n    const formattedText = text.replace(/```([\\w]*)\\n([\\s\\S]*?)```/g, (match, language, code) => {\r\n      console.log('Found code block:', { language, code });\r\n      return `<div class=\"code-block-container\">\r\n        <pre class=\"code-block\"><code class=\"language-${language}\">${code.trim()}</code></pre>\r\n        <button class=\"copy-button\" type=\"button\">Copy</button>\r\n      </div>`;\r\n    });\r\n\r\n    // Handle bold text with double asterisks\r\n    const withBold = formattedText.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\r\n\r\n    // Handle bullet points (both asterisk and hyphen)\r\n    const withBulletPoints = withBold.replace(/^[\\*\\-] (.+)$/gm, '<li>$1</li>');\r\n    \r\n    // Handle numbered lists\r\n    const withNumberedLists = withBulletPoints.replace(/^\\d+\\. (.+)$/gm, '<li>$1</li>');\r\n\r\n    // Handle paragraphs and wrap lists in <ul> tags\r\n    const withParagraphs = withNumberedLists\r\n      .split('\\n\\n')\r\n      .map(para => para.trim())\r\n      .filter(para => para)\r\n      .map(para => {\r\n        if (para.includes('<li>')) {\r\n          return `<ul>${para}</ul>`;\r\n        }\r\n        if (!para.startsWith('<pre')) {\r\n          return `<p>${para}</p>`;\r\n        }\r\n        return para;\r\n      })\r\n      .join('');\r\n\r\n    return withParagraphs;\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!chatInput.trim()) return;\r\n    const userMessage = chatInput;\r\n    setChatLog(prev => [...prev, { sender: 'User', text: userMessage }]);\r\n    setChatInput('');\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch('/api/chat/ask', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: userMessage })\r\n      });\r\n      const data = await response.json();\r\n      let botResponse = '';\r\n      if (\r\n        data &&\r\n        data.candidates &&\r\n        data.candidates.length > 0 &&\r\n        data.candidates[0].content &&\r\n        data.candidates[0].content.parts &&\r\n        data.candidates[0].content.parts.length > 0\r\n      ) {\r\n        botResponse = data.candidates[0].content.parts[0].text;\r\n      } else {\r\n        botResponse = JSON.stringify(data);\r\n      }\r\n      const formattedResponse = formatBotResponse(botResponse);\r\n      setChatLog(prev => [...prev, { \r\n        sender: 'Bot', \r\n        text: formattedResponse,\r\n        isFormatted: true \r\n      }]);\r\n    } catch (error) {\r\n      setChatLog(prev => [...prev, { sender: 'Bot', text: 'Error: ' + error }]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Add event listener for copy buttons\r\n    const handleCopy = (event) => {\r\n      if (event.target.classList.contains('copy-button')) {\r\n        const codeBlock = event.target.closest('.code-block-container').querySelector('code');\r\n        navigator.clipboard.writeText(codeBlock.textContent)\r\n          .then(() => {\r\n            const button = event.target;\r\n            button.textContent = 'Copied!';\r\n            setTimeout(() => {\r\n              button.textContent = 'Copy';\r\n            }, 2000);\r\n          })\r\n          .catch(err => console.error('Failed to copy:', err));\r\n      }\r\n    };\r\n\r\n    document.addEventListener('click', handleCopy);\r\n    return () => document.removeEventListener('click', handleCopy);\r\n  }, []);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [chatLog, isLoading]);\r\n\r\n  return (\r\n    <section className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">\r\n        <SmartToyIcon className=\"robot-icon\" />\r\n        <h2>AI Assistant</h2>\r\n      </div>\r\n      \r\n      <div className=\"chat-messages\">\r\n        {chatLog.map((entry, index) => (\r\n          <div \r\n            key={index} \r\n            className={`message-bubble ${entry.sender === 'User' ? 'user-message' : 'bot-message'}`}\r\n          >\r\n            <div className=\"message-icon\">\r\n              {entry.sender === 'User' ? <PersonIcon /> : <SmartToyIcon />}\r\n            </div>\r\n            <div className=\"message-content\">\r\n              {entry.isFormatted ? (\r\n                <div \r\n                  className=\"message-text formatted\"\r\n                  dangerouslySetInnerHTML={{ __html: entry.text }}\r\n                />\r\n              ) : (\r\n                <div className=\"message-text\">{entry.text}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {isLoading && (\r\n          <div className=\"message-bubble bot-message\">\r\n            <div className=\"message-icon\">\r\n              <SmartToyIcon />\r\n            </div>\r\n            <div className=\"message-content\">\r\n              <div className=\"typing-indicator\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div className=\"chat-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here...\"\r\n          value={chatInput}\r\n          onChange={(e) => setChatInput(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n          className=\"chat-input\"\r\n        />\r\n        <button \r\n          onClick={handleSend}\r\n          className=\"send-button\"\r\n          disabled={!chatInput.trim()}\r\n        >\r\n          <SendIcon />\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ChatbotSection;\r\n"],"mappings":"AAAA,MAAO,CAAAA,UAAU,KAAM,4BAA4B,CACnD,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAC/C,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CACvD,MAAO,CAAAC,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,MAAO,sBAAsB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACQ,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACU,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAAY,cAAc,CAAGb,MAAM,CAAC,IAAI,CAAC,CAEnC,KAAM,CAAAc,iBAAiB,CAAIC,IAAI,EAAK,CAClC;AACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEF,IAAI,CAAC,CAEnC;AACA,KAAM,CAAAG,aAAa,CAAGH,IAAI,CAACI,OAAO,CAAC,4BAA4B,CAAE,CAACC,KAAK,CAAEC,QAAQ,CAAEC,IAAI,GAAK,CAC1FN,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAE,CAAEI,QAAQ,CAAEC,IAAK,CAAC,CAAC,CACpD,MAAO;AACb,wDAAwDD,QAAQ,KAAKC,IAAI,CAACC,IAAI,CAAC,CAAC;AAChF;AACA,aAAa,CACT,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,QAAQ,CAAGN,aAAa,CAACC,OAAO,CAAC,gBAAgB,CAAE,qBAAqB,CAAC,CAE/E;AACA,KAAM,CAAAM,gBAAgB,CAAGD,QAAQ,CAACL,OAAO,CAAC,iBAAiB,CAAE,aAAa,CAAC,CAE3E;AACA,KAAM,CAAAO,iBAAiB,CAAGD,gBAAgB,CAACN,OAAO,CAAC,gBAAgB,CAAE,aAAa,CAAC,CAEnF;AACA,KAAM,CAAAQ,cAAc,CAAGD,iBAAiB,CACrCE,KAAK,CAAC,MAAM,CAAC,CACbC,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACP,IAAI,CAAC,CAAC,CAAC,CACxBQ,MAAM,CAACD,IAAI,EAAIA,IAAI,CAAC,CACpBD,GAAG,CAACC,IAAI,EAAI,CACX,GAAIA,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,CAAE,CACzB,MAAO,OAAOF,IAAI,OAAO,CAC3B,CACA,GAAI,CAACA,IAAI,CAACG,UAAU,CAAC,MAAM,CAAC,CAAE,CAC5B,MAAO,MAAMH,IAAI,MAAM,CACzB,CACA,MAAO,CAAAA,IAAI,CACb,CAAC,CAAC,CACDI,IAAI,CAAC,EAAE,CAAC,CAEX,MAAO,CAAAP,cAAc,CACvB,CAAC,CAED,KAAM,CAAAQ,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CAAC1B,SAAS,CAACc,IAAI,CAAC,CAAC,CAAE,OACvB,KAAM,CAAAa,WAAW,CAAG3B,SAAS,CAC7BD,UAAU,CAAC6B,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,CAAEC,MAAM,CAAE,MAAM,CAAEvB,IAAI,CAAEqB,WAAY,CAAC,CAAC,CAAC,CACpE1B,YAAY,CAAC,EAAE,CAAC,CAChBE,YAAY,CAAC,IAAI,CAAC,CAClB,GAAI,CACF,KAAM,CAAA2B,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,eAAe,CAAE,CAC5CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAEV,WAAY,CAAC,CAC/C,CAAC,CAAC,CACF,KAAM,CAAAW,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClC,GAAI,CAAAC,WAAW,CAAG,EAAE,CACpB,GACEF,IAAI,EACJA,IAAI,CAACG,UAAU,EACfH,IAAI,CAACG,UAAU,CAACC,MAAM,CAAG,CAAC,EAC1BJ,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,EAC1BL,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,CAACC,KAAK,EAChCN,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,CAACC,KAAK,CAACF,MAAM,CAAG,CAAC,CAC3C,CACAF,WAAW,CAAGF,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAACtC,IAAI,CACxD,CAAC,IAAM,CACLkC,WAAW,CAAGL,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC,CACpC,CACA,KAAM,CAAAO,iBAAiB,CAAGxC,iBAAiB,CAACmC,WAAW,CAAC,CACxDzC,UAAU,CAAC6B,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,CAC3BC,MAAM,CAAE,KAAK,CACbvB,IAAI,CAAEuC,iBAAiB,CACvBC,WAAW,CAAE,IACf,CAAC,CAAC,CAAC,CACL,CAAE,MAAOC,KAAK,CAAE,CACdhD,UAAU,CAAC6B,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,CAAEC,MAAM,CAAE,KAAK,CAAEvB,IAAI,CAAE,SAAS,CAAGyC,KAAM,CAAC,CAAC,CAAC,CAC3E,CAAC,OAAS,CACR5C,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAEDb,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAA0D,UAAU,CAAIC,KAAK,EAAK,CAC5B,GAAIA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,CAAE,CAClD,KAAM,CAAAC,SAAS,CAAGJ,KAAK,CAACC,MAAM,CAACI,OAAO,CAAC,uBAAuB,CAAC,CAACC,aAAa,CAAC,MAAM,CAAC,CACrFC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACL,SAAS,CAACM,WAAW,CAAC,CACjDC,IAAI,CAAC,IAAM,CACV,KAAM,CAAAC,MAAM,CAAGZ,KAAK,CAACC,MAAM,CAC3BW,MAAM,CAACF,WAAW,CAAG,SAAS,CAC9BG,UAAU,CAAC,IAAM,CACfD,MAAM,CAACF,WAAW,CAAG,MAAM,CAC7B,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAC,CACDI,KAAK,CAACC,GAAG,EAAIzD,OAAO,CAACwC,KAAK,CAAC,iBAAiB,CAAEiB,GAAG,CAAC,CAAC,CACxD,CACF,CAAC,CAEDC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,CAAElB,UAAU,CAAC,CAC9C,MAAO,IAAMiB,QAAQ,CAACE,mBAAmB,CAAC,OAAO,CAAEnB,UAAU,CAAC,CAChE,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAoB,cAAc,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CAC3B,CAAAA,qBAAA,CAAAjE,cAAc,CAACkE,OAAO,UAAAD,qBAAA,iBAAtBA,qBAAA,CAAwBE,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAChE,CAAC,CAEDlF,SAAS,CAAC,IAAM,CACd8E,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAACtE,OAAO,CAAEI,SAAS,CAAC,CAAC,CAExB,mBACEN,KAAA,YAAS6E,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eACpC9E,KAAA,QAAK6E,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BhF,IAAA,CAACN,YAAY,EAACqF,SAAS,CAAC,YAAY,CAAE,CAAC,cACvC/E,IAAA,OAAAgF,QAAA,CAAI,cAAY,CAAI,CAAC,EAClB,CAAC,cAEN9E,KAAA,QAAK6E,SAAS,CAAC,eAAe,CAAAC,QAAA,EAC3B5E,OAAO,CAACsB,GAAG,CAAC,CAACuD,KAAK,CAAEC,KAAK,gBACxBhF,KAAA,QAEE6E,SAAS,CAAE,kBAAkBE,KAAK,CAAC9C,MAAM,GAAK,MAAM,CAAG,cAAc,CAAG,aAAa,EAAG,CAAA6C,QAAA,eAExFhF,IAAA,QAAK+E,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BC,KAAK,CAAC9C,MAAM,GAAK,MAAM,cAAGnC,IAAA,CAACR,UAAU,GAAE,CAAC,cAAGQ,IAAA,CAACN,YAAY,GAAE,CAAC,CACzD,CAAC,cACNM,IAAA,QAAK+E,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7BC,KAAK,CAAC7B,WAAW,cAChBpD,IAAA,QACE+E,SAAS,CAAC,wBAAwB,CAClCI,uBAAuB,CAAE,CAAEC,MAAM,CAAEH,KAAK,CAACrE,IAAK,CAAE,CACjD,CAAC,cAEFZ,IAAA,QAAK+E,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEC,KAAK,CAACrE,IAAI,CAAM,CAChD,CACE,CAAC,GAfDsE,KAgBF,CACN,CAAC,CACD1E,SAAS,eACRN,KAAA,QAAK6E,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzChF,IAAA,QAAK+E,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BhF,IAAA,CAACN,YAAY,GAAE,CAAC,CACb,CAAC,cACNM,IAAA,QAAK+E,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9B9E,KAAA,QAAK6E,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BhF,IAAA,UAAY,CAAC,cACbA,IAAA,UAAY,CAAC,cACbA,IAAA,UAAY,CAAC,EACV,CAAC,CACH,CAAC,EACH,CACN,cACDA,IAAA,QAAKqF,GAAG,CAAE3E,cAAe,CAAE,CAAC,EACzB,CAAC,cAENR,KAAA,QAAK6E,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnChF,IAAA,UACEsF,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,2BAA2B,CACvCC,KAAK,CAAElF,SAAU,CACjBmF,QAAQ,CAAGC,CAAC,EAAKnF,YAAY,CAACmF,CAAC,CAAClC,MAAM,CAACgC,KAAK,CAAE,CAC9CG,UAAU,CAAGD,CAAC,EAAKA,CAAC,CAACE,GAAG,GAAK,OAAO,EAAI5D,UAAU,CAAC,CAAE,CACrD+C,SAAS,CAAC,YAAY,CACvB,CAAC,cACF/E,IAAA,WACE6F,OAAO,CAAE7D,UAAW,CACpB+C,SAAS,CAAC,aAAa,CACvBe,QAAQ,CAAE,CAACxF,SAAS,CAACc,IAAI,CAAC,CAAE,CAAA4D,QAAA,cAE5BhF,IAAA,CAACP,QAAQ,GAAE,CAAC,CACN,CAAC,EACN,CAAC,EACC,CAAC,CAEd,CAEA,cAAe,CAAAU,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}